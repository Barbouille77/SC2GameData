<?xml version="1.0" encoding="us-ascii"?>
<tree root="RootConditional">
  <!-- ********Attack Selector Depth 3 Nodes**************** -->
  <node id="CurrentTargetNotHero" name="CurrentTargetNotHero" type="UnitFilterMatch" comment="Check to see if our current target is a hero">
    <property name="Unit" valueSource="variable" value="Current Target"/>
  </node>

  <node id="NoIgnoredByTowerAI" name="NoIgnoredByTowerAI" type="UnitHasBehavior" comment="Chek to see if the current target has Ingored by Tower AI">
    <property name="Unit" valueSource="variable" value="Current Target"/>
    <property name="Behavior" value="IgnoredByTowerAI"/>
  </node>

  <node id="NoTowerAIPriority2" name="NoTowerAIPriority2" type="UnitHasBehavior" comment="Chek to see if the current target has Tower AI Priority 2">
    <property name="Unit" valueSource="variable" value="Current Target"/>
    <property name="Behavior" value="TowerAIPrioritzedTarget2"/>
  </node>

  <node id="AttackCurrentTarget" name="AttackCurrentTarget" type="Attack" comment="Tell the tower to continue attackin its current target">
  </node>

  <!-- ********Attack Selector Depth 2 Nodes**************** -->

  <node id="CurrentTargetIsValid" name="CurrentTargetIsValid" type="And" comment="Check to see if our current target is still valid">
    <insertChild id="CurrentTargetNotHero"/>
    <insertChild id="NoIgnoredByTowerAI"/>
    <insertChild id="NoTowerAIPriority2"/>
    <insertChild id="AttackCurrentTarget"/>
    <insertChild id="AttackSelector3"/>
  </node>

  <node id="DestroyTargetingRing" name="DestroyTargetingItem" type="GalaxyEvent" comment="Send a galaxy event to destroy the targeting ring">
    <property name="Event" value="DestoryTowerTargetingRing"/>
    <property name="TriggeringUnit" valueSource="intrinsic" value="Self"/>
  </node>

  <!-- ********Attack Selector Depth 1 Nodes**************** -->

  <node id="StillAttackingCurrentTarget" name="StillAttackingCurrentTarget" type="Or" comment="See if we can still attack our current target, if not destory ring">
    <insertChild id="CurrentTargetIsValid"/>
    <insertChild id="DestroyTargetingRing"/>
  </node>

  <node id="AttackMinions" name="AttackMinions" type="Attack" comment="Search for nearby minions to attack">
  </node>

  <node id="AttackSummons" name="AttackSummons" type="Attack" comment="Search for nearby summoned units to attack">
  </node>

  <node id="FindAnyTowerPrioity1" name="LookForSummon" type="And" comment="Look for a summon to attack and destroy the targeting ring if we find one">
    <insertChild id="AttackSummons"/>
    <insertChild id="DestroyTargetingRing"/>
  </node>
  <node id="FindAnyTowerPrioity2" name="FindAnyTowerPrioity2" type="Attack" comment="Look for a nearby enemy with attack priority 2 behavior">
  </node>

  <node id="CurrentTargetIsValidHero" name="CurrentTargetIsValidHero" type="And" comment="Check to see if our current target is still valid, allowing hereoes this time">
    <insertChild id="NoIgnoredByTowerAI"/>
    <insertChild id="AttackCurrentTarget"/>
  </node>

  <node id="AttackHero" name="AttackHero" type="Attack" comment="Look for a nearby enemy heroes to attack">
  </node>

  <!-- ********ATTACK SELECTOR**************** -->
  <node id="AttackSelector" name="AttackSelector" type="Select" comment="Tower Can Attack, Pick Target">
    <insertChild id="StillAttackingCurrentTarget"/>
    <insertChild id="AttackMinions"/>
    <insertChild id="AttackSummons"/>
    <insertChild id="FindAnyTowerPrioity1"/>
    <insertChild id="AttackSelector3"/>    
    <insertChild id="FindAnyTowerPrioity2"/>
    <insertChild id="CurrentTargetIsValidHero"/>
    <insertChild id="AttackHero"/>
  </node>
  
  
  
      <!-- ********Attack Selector Depth 3 Nodes**************** -->
  <node id="CurrentTargetNotHero3" name="CurrentTargetNotHero" type="UnitFilterMatch" comment="Check to see if our current target is a hero">
    <property name="Unit" valueSource="variable" value="Current Target"/>
  </node>

  <node id="NoIgnoredByTowerAI3" name="NoIgnoredByTowerAI" type="UnitHasBehavior" comment="Chek to see if the current target has Ingored by Tower AI">
    <property name="Unit" valueSource="variable" value="Current Target"/>
    <property name="Behavior" value="IgnoredByTowerAI"/>
  </node>

  <node id="NoTowerAIPriority23" name="NoTowerAIPriority2" type="UnitHasBehavior" comment="Chek to see if the current target has Tower AI Priority 2">
    <property name="Unit" valueSource="variable" value="Current Target"/>
    <property name="Behavior" value="TowerAIPrioritzedTarget2"/>
  </node>

  <node id="AttackCurrentTarget3" name="AttackCurrentTarget" type="Attack" comment="Tell the tower to continue attackin its current target">
  </node>

  <!-- ********Attack Selector Depth 2 Nodes**************** -->

  <node id="CurrentTargetIsValid3" name="CurrentTargetIsValid" type="And" comment="Check to see if our current target is still valid">
    <insertChild id="CurrentTargetNotHero3"/>
    <insertChild id="NoIgnoredByTowerAI3"/>
    <insertChild id="NoTowerAIPriority23"/>
    <insertChild id="AttackCurrentTarget3"/>
  </node>

  <node id="DestroyTargetingRing3" name="DestroyTargetingItem" type="GalaxyEvent" comment="Send a galaxy event to destroy the targeting ring">
    <property name="Event" value="DestoryTowerTargetingRing"/>
    <property name="TriggeringUnit" valueSource="intrinsic" value="Self"/>
  </node>

  <!-- ********Attack Selector Depth 1 Nodes**************** -->

  <node id="StillAttackingCurrentTarget3" name="StillAttackingCurrentTarget" type="Or" comment="See if we can still attack our current target, if not destory ring">
    <insertChild id="CurrentTargetIsValid3"/>
    <insertChild id="DestroyTargetingRing3"/>
  </node>

  <node id="AttackMinions3" name="AttackMinions" type="Attack" comment="Search for nearby minions to attack">
  </node>

  <node id="AttackSummons3" name="AttackSummons" type="Attack" comment="Search for nearby summoned units to attack">
  </node>

  <node id="FindAnyTowerPrioity13" name="LookForSummon" type="And" comment="Look for a summon to attack and destroy the targeting ring if we find one">
    <insertChild id="AttackSummons"/>
    <insertChild id="DestroyTargetingRing"/>
  </node>
  <node id="FindAnyTowerPrioity23" name="FindAnyTowerPrioity2" type="Attack" comment="Look for a nearby enemy with attack priority 2 behavior">
  </node>

  <node id="CurrentTargetIsValidHero3" name="CurrentTargetIsValidHero" type="And" comment="Check to see if our current target is still valid, allowing hereoes this time">
    <insertChild id="NoIgnoredByTowerAI"/>
    <insertChild id="AttackCurrentTarget"/>
  </node>

  <node id="AttackHero3" name="AttackHero" type="Attack" comment="Look for a nearby enemy heroes to attack">
  </node>

  <!-- ********ATTACK SELECTOR**************** -->
  <node id="AttackSelector3" name="AttackSelector" type="Select" comment="Tower Can Attack, Pick Target">
    <insertChild id="StillAttackingCurrentTarget3"/>
    <insertChild id="AttackMinions3"/>
    <insertChild id="AttackSummons3"/>
    <insertChild id="FindAnyTowerPrioity13"/>
    <insertChild id="FindAnyTowerPrioity23"/>
    <insertChild id="CurrentTargetIsValidHero3"/>
    <insertChild id="AttackHero3"/>
  </node>
  
  
  
  
  
  
    <!-- ********Attack Selector Depth 3 Nodes**************** -->
  <node id="CurrentTargetNotHero2" name="CurrentTargetNotHero" type="UnitFilterMatch" comment="Check to see if our current target is a hero">
    <property name="Unit" valueSource="variable" value="Current Target"/>
  </node>

  <node id="NoIgnoredByTowerAI2" name="NoIgnoredByTowerAI" type="UnitHasBehavior" comment="Chek to see if the current target has Ingored by Tower AI">
    <property name="Unit" valueSource="variable" value="Current Target"/>
    <property name="Behavior" value="IgnoredByTowerAI"/>
  </node>

  <node id="NoTowerAIPriority22" name="NoTowerAIPriority2" type="UnitHasBehavior" comment="Chek to see if the current target has Tower AI Priority 2">
    <property name="Unit" valueSource="variable" value="Current Target"/>
    <property name="Behavior" value="TowerAIPrioritzedTarget2"/>
  </node>

  <node id="AttackCurrentTarget2" name="AttackCurrentTarget" type="Attack" comment="Tell the tower to continue attackin its current target">
  </node>

  <!-- ********Attack Selector Depth 2 Nodes**************** -->

  <node id="CurrentTargetIsValid2" name="CurrentTargetIsValid" type="And" comment="Check to see if our current target is still valid">
    <insertChild id="CurrentTargetNotHero2"/>
    <insertChild id="NoIgnoredByTowerAI2"/>
    <insertChild id="NoTowerAIPriority22"/>
    <insertChild id="AttackCurrentTarget2"/>
  </node>

  <node id="DestroyTargetingRing2" name="DestroyTargetingItem" type="GalaxyEvent" comment="Send a galaxy event to destroy the targeting ring">
    <property name="Event" value="DestoryTowerTargetingRing"/>
    <property name="TriggeringUnit" valueSource="intrinsic" value="Self"/>
  </node>

  <!-- ********Attack Selector Depth 1 Nodes**************** -->

  <node id="StillAttackingCurrentTarget2" name="StillAttackingCurrentTarget" type="Or" comment="See if we can still attack our current target, if not destory ring">
    <insertChild id="CurrentTargetIsValid2"/>
    <insertChild id="DestroyTargetingRing2"/>
  </node>

  <node id="AttackMinions2" name="AttackMinions" type="Attack" comment="Search for nearby minions to attack">
  </node>

  <node id="AttackSummons2" name="AttackSummons" type="Attack" comment="Search for nearby summoned units to attack">
  </node>

  <node id="FindAnyTowerPrioity12" name="LookForSummon" type="And" comment="Look for a summon to attack and destroy the targeting ring if we find one">
    <insertChild id="AttackSummons"/>
    <insertChild id="DestroyTargetingRing"/>
  </node>
  <node id="FindAnyTowerPrioity22" name="FindAnyTowerPrioity2" type="Attack" comment="Look for a nearby enemy with attack priority 2 behavior">
  </node>

  <node id="CurrentTargetIsValidHero2" name="CurrentTargetIsValidHero" type="And" comment="Check to see if our current target is still valid, allowing hereoes this time">
    <insertChild id="NoIgnoredByTowerAI"/>
    <insertChild id="AttackCurrentTarget"/>
  </node>

  <node id="AttackHero2" name="AttackHero" type="Attack" comment="Look for a nearby enemy heroes to attack">
  </node>

  <!-- ********ATTACK SELECTOR**************** -->
  <node id="AttackSelector2" name="AttackSelector" type="Select" comment="Tower Can Attack, Pick Target">
    <insertChild id="StillAttackingCurrentTarget2"/>
    <insertChild id="AttackMinions2"/>
    <insertChild id="AttackSummons2"/>
    <insertChild id="FindAnyTowerPrioity12"/>
    <insertChild id="FindAnyTowerPrioity22"/>
    <insertChild id="CurrentTargetIsValidHero2"/>
    <insertChild id="AttackHero2"/>
  </node>
  
  
  
  
  
  
  
  
  <!-- **************ATTACK CONDITIONS*********-->
  <node id="HasAmmoDisabler" name="HasAmmoDisabler" type="UnitHasBehavior" comment="Chek to see if the tower has the Ammod Disabler Behavior">
    <property name="Unit" valueSource="intrinsic" value="Self"/>
    <property name="Behavior" value="StructureAmmoDisabler"/>
  </node>

  <node id="IsPassive" name="IsPassive" type="UnitFilterMatch" comment="Chek to see if the tower is flagged as Passive">
    <property name="Unit" valueSource="intrinsic" value="Self"/>
  </node>


  <!-- ********ATTACK CONDITIONS **************** -->
  <node id="AttackConditions" name="AttackConditions" type="Or" comment="Conditional Checks to Make Sure We Can Attack">
    <!-- Has Ammo Disabler-->
    <insertChild id="HasAmmoDisabler"/>
    <!-- Is Passive-->
    <insertChild id="IsPassive"/>
  </node>
  
  <!--- Unable To Attack? -->
  <node id="UnableToAttack" name="UnableToAttack" type="And" comment="Check to see if we are prevented from attacking and destroy our targeting ring if we are">
    <insertChild id="AttackConditions"/>
    <insertChild id="DestroyTargetingRing"/>
  </node>
  
  <!-- ********ROOT**************** -->
  <node id="RootConditional" name="RootConditional" type="Or" comment="Root For Tower AI Think Tree">
    <variable name="Current Target" temp="false" type="Unit" value=""/>
    <insertChild id="UnableToAttack"/>
    <insertChild id="AttackSelector"/>
  </node>
</tree>

