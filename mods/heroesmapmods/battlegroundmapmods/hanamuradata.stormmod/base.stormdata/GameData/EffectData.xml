<?xml version="1.0" encoding="us-ascii"?>
<Catalog>
    <CEffectSwitch id="HanamuraPayloadApplyAllyBehaviorsUponDestinationSwitch">
        <CaseArray Validator="PayloadAllyNearby3" Effect="HanamuraPayloadApplyAtDestinationWith3AlliesBehavior"/>
        <CaseArray Validator="PayloadAllyNearby2" Effect="HanamuraPayloadApplyAtDestinationWith2AlliesBehavior"/>
        <CaseArray Validator="PayloadAllyNearby1" Effect="HanamuraPayloadApplyAtDestinationWith1AllyBehavior"/>
    </CEffectSwitch>
    <CEffectApplyBehavior id="HanamuraPayloadApplyAtDestinationWith1AllyBehavior">
        <Behavior value="PayloadAtDestinationWith1Ally"/>
        <WhichUnit Value="Source"/>
    </CEffectApplyBehavior>
    <CEffectApplyBehavior id="HanamuraPayloadApplyAtDestinationWith2AlliesBehavior">
        <WhichUnit Value="Source"/>
        <Behavior value="PayloadAtDestinationWith2Allies"/>
    </CEffectApplyBehavior>
    <CEffectApplyBehavior id="HanamuraPayloadApplyAtDestinationWith3AlliesBehavior">
        <Behavior value="PayloadAtDestinationWith3Allies"/>
        <WhichUnit Value="Source"/>
    </CEffectApplyBehavior>
    <CEffectSet id="HanamuraPayloadTurretLaunchSet">
        <EffectArray value="HanamuraPayloadTurretWeaponLaunchMissile"/>
    </CEffectSet>
    <CEffectDamage id="HanamuraPayloadTurretWeaponDamage" parent="OverwatchTurretWeaponDamagePlayer"/>
    <CEffectLaunchMissile id="HanamuraPayloadTurretWeaponLaunchMissile">
        <ValidatorArray index="0" value="TargetNotDead"/>
        <ImpactEffect value="HanamuraPayloadTurretWeaponDamage"/>
        <AmmoUnit value="OverwatchTurretMissile"/>
        <ImpactRange value="0.5"/>
    </CEffectLaunchMissile>
    <CEffectDamage id="DeadzoneMinionDamage" parent="StormSpell">
        <ValidatorArray index="0" removed="1"/>
        <LaunchLocation Value="CasterUnit"/>
        <ImpactLocation Value="TargetUnit"/>
        <Death value="Electrocute"/>
        <VitalFractionMax index="Life" value="0.2"/>
        <VitalFractionMax index="Shields" value="1"/>
    </CEffectDamage>
    <CEffectSet id="DeadzoneMinionInitialSet">
        <EffectArray value="DeadzoneMinionApplyBehavior"/>
    </CEffectSet>
    <CEffectSet id="DeadzoneMinionEffectSet">
        <EffectArray value="DeadzoneMinionDamage"/>
        <EffectArray value="DeadzoneMinionApplyBehavior"/>
    </CEffectSet>
    <CEffectApplyBehavior id="DeadzoneMinionApplyBehavior">
        <Behavior value="DeadzoneKillMinion"/>
    </CEffectApplyBehavior>
    <CEffectDamage id="PayloadDestroyBlocker">
        <ValidatorArray value="IsZagaraNydusWorm"/>
        <Flags index="Kill" value="1"/>
    </CEffectDamage>
    <CEffectRemoveBehavior id="PayloadRemoveReverseBehavior">
        <WhichUnit Value="Source"/>
        <BehaviorLink value="PayloadReverseBehavior"/>
    </CEffectRemoveBehavior>
    <!-- If I'm moving forward and blocked, check to see if that blocking object is a Payload.  If it is, check to see if it's Blocked.  If it is, then move it forward slightly.  If it's not, then send is backward immediately -->
    <CEffectSwitch id="PayloadBlockedDetermineMovementSwitch">
        <CaseArray Validator="PayloadDoesNotHaveReverseOrReverseCountdownBehaviors" Effect="PayloadBlockedDetermineIfBlockingObjectIsPayload"/>
    </CEffectSwitch>
    <CEffectEnumArea id="PayloadBlockedDetermineIfBlockingObjectIsPayload">
        <ImpactLocation Value="SourceUnit"/>
        <SearchFilters value="-;Self,Player,Dead"/>
        <AreaArray RectangleWidth="3" RectangleHeight="4" Effect="PayloadBlockedObstacleIsPayloadWithNoAlliesNearby"/>
        <AreaRelativeOffset value="0,-2"/>
    </CEffectEnumArea>
    <CEffectCreatePersistent id="PayloadBlockedObstacleIsPayloadWithNoAlliesNearby">
        <WhichLocation Value="TargetUnit"/>
        <InitialEffect value="PayloadBlockedMoveEnemyPayloadForwardOrBackward"/>
        <ValidatorArray value="PayloadDoesNotHaveProximityBehaviors"/>
    </CEffectCreatePersistent>
    <CEffectSwitch id="PayloadBlockedMoveEnemyPayloadForwardOrBackward">
        <CaseArray Validator="PayloadBlockedMoveObstacleBackwardCombine" Effect="PayloadBlockedMoveEnemyBackwardImmediately"/>
        <CaseArray Validator="PayloadBlockedMoveObstacleForwardCombine" Effect="PayloadBlockedMoveEnemyForwardSlightly"/>
    </CEffectSwitch>
    <CEffectSet id="PayloadBlockedMoveEnemyForwardSlightly">
        <EffectArray value="PayloadBlockedRemoveReverseBehaviorFromObstacle"/>
        <EffectArray value="PayloadBlockedApplyMoveForwardBehaviorToObstacle"/>
    </CEffectSet>
    <CEffectSet id="PayloadBlockedMoveEnemyBackwardImmediately">
        <EffectArray value="PayloadBlockedRemoveReverseCountdownBehaviorFromObstacle"/>
        <EffectArray value="PayloadBlockedApplyReverseBehaviorToObstacle"/>
        <EffectArray value="PayloadBlockedApplyTemporaryReverseBehaviorToObstacle"/>
    </CEffectSet>
    <!-- Obstacle is another Payload that's reversing that's blocked.  Remove Reverse and make it nudge forward.  Then, apply reverse again. -->
    <CEffectApplyBehavior id="PayloadBlockedApplyMoveForwardBehaviorToObstacle">
        <Behavior value="PayloadBlockedMoveForwardBehavior"/>
    </CEffectApplyBehavior>
    <CEffectApplyBehavior id="PayloadBlockedApplyTemporaryReverseBehaviorToObstacle">
        <Behavior value="PayloadBlockedTemporaryReverseBehavior"/>
    </CEffectApplyBehavior>
    <CEffectApplyBehavior id="PayloadBlockedApplyReverseBehaviorToObstacle">
        <Behavior value="PayloadReverseBehavior"/>
    </CEffectApplyBehavior>
    <CEffectRemoveBehavior id="PayloadBlockedRemoveReverseCountdownBehaviorFromObstacle">
        <BehaviorLink value="PayloadReverseCountdownBehavior"/>
    </CEffectRemoveBehavior>
    <CEffectRemoveBehavior id="PayloadBlockedRemoveReverseBehaviorFromObstacle">
        <BehaviorLink value="PayloadReverseBehavior"/>
    </CEffectRemoveBehavior>
    <!-- Default "Apply Block" search area" -->
    <CEffectEnumArea id="PayloadBlockedObstacleSearchArea">
        <ImpactLocation Value="SourceUnit"/>
        <SearchFilters value="-;Self,Player,Dead"/>
        <AreaArray RectangleWidth="3" RectangleHeight="4" Effect="PayloadBlockedObstacleFoundSet"/>
        <AreaRelativeOffset value="0,-2"/>
    </CEffectEnumArea>
    <CEffectSet id="PayloadBlockedObstacleFoundSet">
        <ValidatorArray value="ValidObstacleTargets"/>
        <EffectArray value="PayloadDestroyBlocker"/>
        <EffectArray value="PayloadBlockedApplyBlockedBehavior"/>
    </CEffectSet>
    <CEffectApplyBehavior id="PayloadBlockedApplyBlockedBehavior">
        <WhichUnit Value="Source"/>
        <Behavior value="PayloadObstaclesInTheWay"/>
    </CEffectApplyBehavior>
    <CEffectLaunchMissile id="HanamuraBossLaunchSelfToCore">
        <ValidatorArray index="0" value="IsCore"/>
        <ImpactEffect value="AttackCoreDamage"/>
        <DeathType value="Remove"/>
        <Movers Link="MissileDefault"/>
        <LaunchEffect value="HanamuraBossRemoveSearchForCoreBehavior"/>
    </CEffectLaunchMissile>
    <CEffectRemoveBehavior id="PayloadRemoveTurretBehavior">
        <WhichUnit Value="Source"/>
        <BehaviorLink value="PayloadHasTurret"/>
    </CEffectRemoveBehavior>
    <CEffectCreateHealer id="PayloadResetHealth">
        <ImpactUnit Value="Source"/>
        <RechargeVitalFraction value="1"/>
    </CEffectCreateHealer>
    <CEffectSet id="PayloadResetHealthSet">
        <EffectArray value="PayloadResetHealth"/>
        <EffectArray value="PayloadRemoveTurretBehavior"/>
    </CEffectSet>
    <CEffectApplyBehavior id="ApplyPayloadAlly1Behavior">
        <Behavior value="PayloadAllyProximityBehavior1"/>
    </CEffectApplyBehavior>
    <CEffectApplyBehavior id="ApplyAllyPayloadPusherBehavior">
        <Behavior value="AllyPayloadPusherBehavior"/>
    </CEffectApplyBehavior>
    <CEffectApplyBehavior id="ApplyPayloadAlly2Behavior">
        <Behavior value="PayloadAllyProximityBehavior2"/>
    </CEffectApplyBehavior>
    <CEffectApplyBehavior id="ApplyPayloadAlly3Behavior">
        <Behavior value="PayloadAllyProximityBehavior3"/>
    </CEffectApplyBehavior>
    <CEffectApplyBehavior id="ApplyPayloadEnemyNearbyBehavior">
        <Behavior value="PayloadEnemyProximityBehavior"/>
    </CEffectApplyBehavior>
    <CEffectApplyBehavior id="ApplyPayloadAtStartLocationBehavior">
        <Behavior value="PayloadAtStartPointBehavior"/>
    </CEffectApplyBehavior>
    <CEffectDamage id="AttackCoreDamage">
        <Amount value="1"/>
        <Flags index="NoScaledDealtBonus" value="1"/>
        <Flags index="NoFractionDealtBonus" value="1"/>
    </CEffectDamage>
    <CEffectDamage id="BossAttackCoreDamage">
        <Amount value="1"/>
        <Flags index="NoScaledDealtBonus" value="1"/>
        <Flags index="NoFractionDealtBonus" value="1"/>
    </CEffectDamage>
    <CEffectLaunchMissile id="AttackCoreLaunchMissile4Seconds">
        <AmmoUnit value="AttackCoreMissile"/>
        <Movers Link="AttackCoreMissile4"/>
        <ImpactEffect value="AttackCoreDamage"/>
    </CEffectLaunchMissile>
    <CEffectLaunchMissile id="BossAttackCoreLaunchMissile">
        <AmmoUnit value="AttackCoreBossMissile"/>
        <Movers Link="BossAttackCoreLaunchMissile"/>
        <ImpactEffect value="BossAttackCoreDamage"/>
    </CEffectLaunchMissile>
    <CEffectLaunchMissile id="AttackCoreLaunchMissile6Seconds">
        <ValidatorArray index="0" value="AttackCoreLaunchMissile2SecondsTargetFilters"/>
        <Marker Link="Effect/AttackCoreLaunchMissile2Seconds"/>
        <AmmoUnit value="AttackCoreMissile"/>
        <Movers Link="AttackCoreMissile6"/>
        <ImpactEffect value="AttackCoreDamage"/>
    </CEffectLaunchMissile>
    <CEffectLaunchMissile id="AttackCoreLaunchMissile8Seconds">
        <ValidatorArray index="0" value="AttackCoreLaunchMissile2SecondsTargetFilters"/>
        <Marker Link="Effect/AttackCoreLaunchMissile2Seconds"/>
        <AmmoUnit value="AttackCoreMissile"/>
        <Movers Link="AttackCoreMissile8"/>
        <ImpactEffect value="AttackCoreDamage"/>
    </CEffectLaunchMissile>
    <CEffectModifyUnit id="PayloadAndEnemyCoreSyncEffect"/>
    <CEffectIssueOrder id="PayloadIssueStopOrder">
        <WhichUnit Value="Source"/>
        <Abil value="stop"/>
    </CEffectIssueOrder>
    <CEffectApplyBehavior id="PayloadReverseApplyCountdownBehavior">
        <WhichUnit Value="Source"/>
        <Behavior value="PayloadReverseCountdownBehavior"/>
    </CEffectApplyBehavior>
    <CEffectApplyBehavior id="PayloadReverseApplyReverseBehavior">
        <WhichUnit Value="Source"/>
        <Behavior value="PayloadReverseBehavior"/>
    </CEffectApplyBehavior>
    <CEffectApplyBehavior id="PayloadReverseApplyPauseMovementBehavior">
        <WhichUnit Value="Source"/>
        <Behavior value="PayloadPauseMovingBehavior"/>
    </CEffectApplyBehavior>
    <CEffectSet id="PayloadReverseApplicationSet">
        <EffectArray value="PayloadReverseApplyReverseBehavior"/>
        <EffectArray value="PayloadReverseApplyPauseMovementBehavior"/>
    </CEffectSet>
    <CEffectCreatePersistent id="PayloadReverseCreatePersistent">
        <WhichLocation Value="SourceUnit"/>
        <PeriodCount value="1"/>
        <PeriodicEffectArray value="PayloadReverseModifyUnit"/>
        <PeriodicOffsetArray value="0,1,0"/>
    </CEffectCreatePersistent>
    <CEffectModifyUnit id="PayloadReverseModifyUnit">
        <ImpactUnit Value="Source"/>
        <FacingLocation Value="TargetPoint"/>
        <FacingType value="LookAt"/>
    </CEffectModifyUnit>
    <CEffectSet id="PayloadReverseRemovalSet">
        <EffectArray value="PayloadReverseApplyPauseMovementBehavior"/>
        <EffectArray value="PayloadReverseCreatePersistent"/>
    </CEffectSet>
    <CEffectSwitch id="OverwatchMapMechanicAbilityTargetSwitch">
        <CaseArray Validator="TargetAlliedPayload" Effect="HanamuraMapMechanicAbilityUnitSet"/>
        <ValidatorArray value="TargetIsPointOrTargetIsPlayer11OrPlayer12"/>
    </CEffectSwitch>
    <CEffectApplyBehavior id="HanamuraMapMechanicAbilityApplyBehaviorToPayload">
        <Behavior value="PayloadHasTurret"/>
    </CEffectApplyBehavior>
    <CEffectModifyUnit id="HanamuraMapMechanicAbilityRefreshHeal">
        <VitalArray index="Life" ChangeFraction="1"/>
    </CEffectModifyUnit>
    <CEffectSet id="HanamuraMapMechanicAbilityUnitSet">
        <EffectArray value="OverwatchMapMechanicAbilityRemoveBehavior"/>
        <EffectArray value="HanamuraMapMechanicAbilityApplyBehaviorToPayload"/>
    </CEffectSet>
    <CEffectModifyUnit id="PayloadAttackCoreModifyTurret">
        <ImpactUnit Value="Caster"/>
        <ModifyTurret Turret="PayloadAttackCoreTurret">
            <Target Value="TargetUnit"/>
            <Flags index="Tracking" value="1"/>
        </ModifyTurret>
    </CEffectModifyUnit>
    <CEffectModifyUnit id="PayloadTurretDummyEffectToMakePlaceholderImage"/>
    <CEffectModifyUnit id="PayloadTurretDummyEffectToDestroyPlaceholderImage"/>
    <CEffectModifyUnit id="PayloadTurretDummyEffectToMakePlaceholderImagePayload2"/>
</Catalog>
