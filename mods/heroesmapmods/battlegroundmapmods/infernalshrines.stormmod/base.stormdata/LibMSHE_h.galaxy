include "TriggerLibs/HeroesLib"

//--------------------------------------------------------------------------------------------------
// Library: Infernal Shrines (Mod)
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libMSHE_ge_MMISShrineTypes_None = 0;
const int libMSHE_ge_MMISShrineTypes_CombatShrine = 1;
const int libMSHE_ge_MMISShrineTypes_MonsterShrine = 2;
const int libMSHE_ge_MMISShrineTypes_SiegeShrine = 3;
const int libMSHE_ge_MMISShrineTypes_FrozenShrine = 4;
const int libMSHE_ge_MMISShrineTypes_BombardShrine = 5;
const int libMSHE_ge_MMISShrineTypes_ThunderstormShrine = 6;
const int libMSHE_ge_MMISShrineTypes_ArcaneShrine = 7;
const int libMSHE_ge_MMISUIModes_Idle = 0;
const int libMSHE_ge_MMISUIModes_ShrineWarning = 1;
const int libMSHE_ge_MMISUIModes_ShrineActive = 2;
const int libMSHE_ge_MMISUIModes_Punisher = 3;
const int libMSHE_ge_MMISUIModes_CursedEvent = 4;
const int libMSHE_ge_MMISUIModes_Engine = 5;
const int libMSHE_ge_MMISUIModes_Reinforcements = 6;
const int libMSHE_ge_MMISUIModes_PunisherSpawning = 7;
const int libMSHE_ge_MMISHeroAIStates_MMHWWaitAtShrine = 0;
const int libMSHE_ge_MMISHeroAIStates_MMHWActivateShrine = 1;
const int libMSHE_ge_MMISHeroAIStates_MMHWClearShrine = 2;
const int libMSHE_ge_MMISHeroAIStates_MMHWPushLane = 3;
const int libMSHE_ge_MMISHeroAIStates_MMHWDefendLane = 4;

// Constants
const string libMSHE_gv_mMISMechanicName_C = "InfernalShrines";
const int libMSHE_gv_mMISTotalMonsters_C = 10;
const fixed libMSHE_gv_mMDiabloShrineRefreshMonster_C = 5.0;
const fixed libMSHE_gv_mMDiabloShrinesShrineTimerDuration_C = 100.0;
const fixed libMSHE_gv_mMDiabloShrinesBuffTimerDuration_C = 90.0;
const fixed libMSHE_gv_mMDiabloShrineWarningTimerLong_C = 30.0;
const fixed libMSHE_gv_mMDiabloShrinesExperinceTimer_C = 60.0;
const int libMSHE_gv_mMDiabloShrineCursedEventTotal_C = 40;
const int libMSHE_gv_mMISMoltenScalingAmount_C = 2;
const int libMSHE_gv_mMISThunderstormScalingAmount_C = 7;
const int libMSHE_gv_mMISArcaneScalingAmount_C = 11;
const int libMSHE_gv_mMISFrozenScalingAmount_C = 18;
const int libMSHE_gv_mMISMortarScalingAmount_C = 5;
const fixed libMSHE_gv_mMISHeroAIShrineWarningTime = 15.0;
const fixed libMSHE_gv_mMISHeroAIInnerShrineRadius = 6.0;
const fixed libMSHE_gv_mMISHeroAIOuterShrineRadius = 9.0;
const fixed libMSHE_gv_mMISHeroAIFarShrineRadius = 14.0;
const fixed libMSHE_gv_mMISHeroAIShrineEvalRadius = 30.0;
const fixed libMSHE_gv_mMISHeroAIVeryFarShrineMaxThreshold = 20.0;
const fixed libMSHE_gv_mMISHeroAIVeryFarShrineMinThreshold = 18.0;
const fixed libMSHE_gv_mMISHeroAIPunisherHelpRadiusMax = 10.0;
const fixed libMSHE_gv_mMISHeroAIPunisherHelpRadiusMin = 9.0;
const fixed libMSHE_gv_mMISHeroAIShrineEvalExitCombat = 0.7;
const fixed libMSHE_gv_mMISHeroAIShrineEvalEnterCombat = 0.8;
const fixed libMSHE_gv_mMISHeroAIShrineEvalAllIn = 2.5;
const fixed libMSHE_gv_mMISHeroAIShrineLastSeenEnemyTime = 5.0;

// Structures
struct libMSHE_gs_MMTowerPushPanel {
    int lv_mainPanel;
    int[3] lv_towerPushEnergyGlobePower;
    int lv_shrineWarningFrame;
    int lv_shrineWarningInfoLabel;
    int lv_shrineWarningTimerLabel;
    int lv_shrineActiveFrame;
    int lv_shrineActiveInfoLabel;
    int lv_crystalMortarIcon;
    int lv_crystalFrozenIcon;
    int lv_crystalArcaneIcon;
    int lv_reinforcementWarningFrame;
    int lv_reinforcementWarningInfoLabel;
    int lv_reinforcementWarningTimerLabel;
    int lv_hauntedMinesSkullModeFrame;
    int[libCore_gv_bALMaxTeams + 1] lv_hauntedMinesSkullModeSkullCounterLabel;
    int lv_punisherFrame;
    int lv_punisherHealthBar;
    int lv_punisherTimer;
    int lv_punisherInfoLabel;
    int lv_punisherArcaneAllyIcon;
    int lv_punisherArcaneEnemyIcon;
    int lv_punisherFrozenAllyIcon;
    int lv_punisherFrozenEnemyIcon;
    int lv_punisherMortarAllyIcon;
    int lv_punisherMortarEnemyIcon;
};

// Variable Declarations
fixed libMSHE_gv_mMDiabloShrinesShrineTimerWarning;
int libMSHE_gv_mMDiabloShrinesShrineNotificationTimer;
timer libMSHE_gv_mMISShrineTimer;
timer libMSHE_gv_mMISBuffTimer;
timer libMSHE_gv_mMISShrineWarningTimer;
timer libMSHE_gv_mMISExperince;
timer libMSHE_gv_mMISCursedRefreshTimer;
timer libMSHE_gv_mMISLongWarningTimer;
playergroup libMSHE_gv_mMISMonsterGroup;
bool libMSHE_gv_mMISCursedEvent;
unitgroup libMSHE_gv_mMISCursedCreatures;
int[libCore_gv_bALMaxTeams + 1] libMSHE_gv_mMISTextTag;
int[libCore_gv_bALMaxPlayers + 1] libMSHE_gv_mMISDamageDoneToShrineMinions;
unitgroup libMSHE_gv_mMISInactiveShrines;
unitgroup libMSHE_gv_mMISActiveShrines;
unit[4] libMSHE_gv_mMISShrines;
unitgroup[4] libMSHE_gv_mMISShrineGroups;
int libMSHE_gv_mMISUnitGroupIndex;
point libMSHE_gv_mMISMonsterShrine;
int libMSHE_gv_mMISBuffedTeam;
unit libMSHE_gv_mMISPunisher;
text libMSHE_gv_mMISShrineBuffText;
int libMSHE_gv_mMISNumberofShrinesAllowed;
int libMSHE_gv_mMISNumberOfShrinesEvents;
int libMSHE_gv_mMISTotalShrineCount;
int libMSHE_gv_mMISLastShrine;
int libMSHE_gv_mMISLastShrineCounter;
int libMSHE_gv_mMISCurrentShrine;
fixed libMSHE_gv_mMISMonsterXP;
revealer[3] libMSHE_gv_mMISRevealers;
unit libMSHE_gv_mMISWarningUnit;
string libMSHE_gv_mMISBuff;
int libMSHE_gv_mMISBuffIndex;
int libMSHE_gv_mMISLastBuff;
region[4] libMSHE_gv_mMISRegions;
int[3] libMSHE_gv_mMISKillCount;
playergroup libMSHE_gv_mMISShrineGroup;
unitgroup libMSHE_gv_mMISParalyzeStorage;
int libMSHE_gv_mMISShrineReminderDelay_C;
timer libMSHE_gv_mMISShrineReminderTimer;
int libMSHE_gv_mMISShrineNotificationDelay_C;
timer libMSHE_gv_mMISShrineNotificationTimer;
timer libMSHE_gv_mMISPunisherSpawnTimer;
string[libCore_gv_bALMaxEnginePlayerCount + 1] libMSHE_gv_mMUnderworldAmbience;
timer libMSHE_gv_mMISAffixTimer;
int libMSHE_gv_mMISAffixTimerDuration;
int libMSHE_gv_punisherDuration;
fixed libMSHE_gv_punisherHeroDamage;
fixed libMSHE_gv_punisherSiegeDamage;
int libMSHE_gv_mMDiabloShrinesPunisherPushLane;
libMSHE_gs_MMTowerPushPanel libMSHE_gv_mMTowerPushPanel;
unit libMSHE_gv_mMISUIPunisherUnit;

// Function Declarations
void libMSHE_gf_MMISMapData (point lp_monsterShrine, unit lp_diabloShrineTop, unit lp_diabloShrineMiddle, unit lp_diabloShrineBottom, region lp_diabloShrineTopRegion, region lp_diabloShrineMiddleRegion, region lp_diabloShrineBottomRegion);
void libMSHE_gf_MMISTextTagScoreHandler (int lp_enemyTeam, int lp_team, unit lp_currentShrine);
int libMSHE_gf_MMISGetWhichShrine ();
void libMSHE_gf_MMISActivateShrine (int lp_shrine);
void libMSHE_gf_MMISAnnouncementShrineCaptured (unit lp_shrineUnit, int lp_shrine, int lp_team);
void libMSHE_gf_MMISWarningAnnouncementShrine (int lp_shrine);
void libMSHE_gf_MMISGrantShrineRewardToTeam (int lp_team, unit lp_shrine, string lp_shrineBuff);
string libMSHE_gf_MMISGetIconForShrine (int lp_shrine);
text libMSHE_gf_MMISGetShrineText (int lp_shrine);
string libMSHE_gf_MMISGetBuffForShrine (int lp_shrine);
void libMSHE_gf_MMISSpawnShrineMonster (int lp_affix, int lp_team);
void libMSHE_gf_MMBOEUpdateAmbience (int lp_player);
void libMSHE_gf_MMBOEChangeAmbience (string lp_ambience, string lp_reverb, playergroup lp_players);
void libMSHE_gf_MMISTransmissionShrineWarningActivating ();
void libMSHE_gf_MMISTransmissionShrineActivating ();
void libMSHE_gf_MMISTransmissionPunisherSummoned (int lp_team, int lp_shrineType);
void libMSHE_gf_MMISTransmissionPunisherKilled (int lp_team);
void libMSHE_gf_MMTowerPushUIShowHidePanel (bool lp_showHide);
void libMSHE_gf_MMTowerPushUISetGoblinCount (int lp_count, int lp_count2);
void libMSHE_gf_MMTowerPushUISetMode (int lp_mode);
void libMSHE_gf_MMTowerPushUISetEnergyGlobalProgressUnit3 (int lp_progressUnit);
void libMSHE_gf_MMTowerPushUISetEnergyGlobalProgressUnit5 (int lp_progressUnit);
void libMSHE_gf_MMTowerPushUISetEnergyGlobalProgressUnit (unit lp_progressUnit);
void libMSHE_gf_MMTowerPushUIInit (int lp_parentPanel);
void libMSHE_gf_MMISUIPunisherSpawnTimer (int lp_team);
void libMSHE_gf_MMISHeroAIShrineObjectiveLogic (int lp_faction, bool lp_useAllAIForObjective);
void libMSHE_gf_MMISHeroAIChangeToState (int lp_trigPlayer, int lp_state, unit lp_target, int lp_priority);
int libMSHE_gf_MMISHeroAIWaitAtShrine (int lp_trigPlayer);
bool libMSHE_gf_MMISHeroAIWaitAtShrineExit (int lp_trigPlayer);
int libMSHE_gf_MMISHeroAIActivateShrine (int lp_trigPlayer);
bool libMSHE_gf_MMISHeroAIActivateShrineExit (int lp_trigPlayer);
int libMSHE_gf_MMISHeroAIClearShrine (int lp_trigPlayer);
bool libMSHE_gf_MMISHeroAIClearShrineExit (int lp_trigPlayer);
int libMSHE_gf_MMISHeroAIPushLaneWithMonster (int lp_trigPlayer);
bool libMSHE_gf_MMISHeroAIPushLaneWithMonsterExit (int lp_trigPlayer);
int libMSHE_gf_MMISHeroAIDefendLaneFromMonster (int lp_trigPlayer);
bool libMSHE_gf_MMISHeroAIDefendLaneFromMonsterExit (int lp_trigPlayer);
void libMSHE_gf_MMISHeroAIReturnFromObjectiveStaging ();
void libMSHE_gf_MMISHeroAIChangeStateObjectiveStaging (int lp_trigPlayer);
fixed libMSHE_gf_MMISHeroAIEvalObjective (unit lp_shrineUnit, int lp_faction);
unit libMSHE_gf_MMISHeroAIGetClosestUnit (unitgroup lp_group, point lp_position);
bool libMSHE_gf_MMISHeroAIShrineWarning ();
bool libMSHE_gf_MMISHeroAIShrineNeedsActivating ();
bool libMSHE_gf_MMISHeroAIShrineNeedsClearing ();
bool libMSHE_gf_MMISHeroAIShrineMonsterExists ();
int libMSHE_gf_MMISHeroAICountVisibleEnemyHeroesNearPoint (int lp_faction, point lp_campIndex, fixed lp_searchRadius, bool lp_visionCheat);
int libMSHE_gf_MMISHeroAICountAllyHeroesAssignedToObjective (int lp_faction, point lp_campIndex, fixed lp_searchRadius);
unitgroup libMSHE_gf_MMISHeroAIAllyHeroesAvailableForObjective (int lp_faction);
void libMSHE_gf_MMISHeroAICheckShouldGoToPingedUnit (int lp_pingingPlayer, unit lp_pingedUnit);

// Trigger Declarations
trigger libMSHE_gt_MMISInit;
trigger libMSHE_gt_MMISPingDataInit;
trigger libMSHE_gt_MMISGateOpen;
trigger libMSHE_gt_MMISWarningTimerLong;
trigger libMSHE_gt_MMISCursedEventMinionTracker;
trigger libMSHE_gt_MMISCursedEventScoreTracker;
trigger libMSHE_gt_MMISCursedEventTimerRespawner;
trigger libMSHE_gt_MMISCursedEventMinionDamageTracker;
trigger libMSHE_gt_MMISExperienceTimerExpired;
trigger libMSHE_gt_MMISInitializeShrines;
trigger libMSHE_gt_MMISShrineTimerExpired;
trigger libMSHE_gt_MMISBuffTimerExpired;
trigger libMSHE_gt_MMISWarningTimerExpired;
trigger libMSHE_gt_MMISStartShrineTimer;
trigger libMSHE_gt_MMISShrineUsedbyPlayer;
trigger libMSHE_gt_GameOver;
trigger libMSHE_gt_MMISShrineReminderTimerExpired;
trigger libMSHE_gt_MMInfernalShrinesPlayerMovesCamera;
trigger libMSHE_gt_MMISAffixScaling;
trigger libMSHE_gt_PunisherLeap;
trigger libMSHE_gt_PunisherFixateOn;
trigger libMSHE_gt_PunisherFixateOff;
trigger libMSHE_gt_PunisherDamageTracking;
trigger libMSHE_gt_PunisherDurationTracking;
trigger libMSHE_gt_MMISUIModInitialize;
trigger libMSHE_gt_MMISUIHandler;
trigger libMSHE_gt_MMISDebugSpawnNextShrine;
trigger libMSHE_gt_MMISDebugWarningShrine;
trigger libMSHE_gt_MMISDebugLongShrineTimer;
trigger libMSHE_gt_MMISDebugDisableEvent;
trigger libMSHE_gt_MMISHeroAITeamMapLogic;
trigger libMSHE_gt_MMISHeroAIStateLogic;
trigger libMSHE_gt_MMISHeroAIReturnToObjectiveStaging;
trigger libMSHE_gt_MMISHeroAIObjectiveStagingExit;
trigger libMSHE_gt_MMISHeroAIPingCallbackPlayerPingsUnit;

// Library Initialization
void libMSHE_InitVariables ();

