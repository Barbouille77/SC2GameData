include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: One Lane Map Shared
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libOLMS_ge_MMOneLaneHeroAIStates_MMLostCavernHeroAIPickupFromGenerator = 0;

// Constants
const fixed libOLMS_gv_mMOneLaneTrickleModifier_C = 0.35;
const fixed libOLMS_gv_mMHO_RegenGlobeCoolupTime_C = 45.0;
const fixed libOLMS_gv_aIHeroMMOneLaneAlmostActiveGeneratorDuration = 8.0;
const fixed libOLMS_gv_aIHeroMMOneLaneCloseDistanceToGenerator = 4.0;
const fixed libOLMS_gv_aIHeroMMOneLaneEnemyLastSeenTime = 30.0;
const fixed libOLMS_gv_aIHeroMMOneLaneHealthPercentToStopRegen = 90.0;
const fixed libOLMS_gv_aIHeroMMOneLaneHealthPercentPingStartRegen = 85.0;
const fixed libOLMS_gv_aIHeroMMOneLaneGeneratorEnemyDistance = 12.0;
const fixed libOLMS_gv_aIHeroMMOneLaneGeneratorCloseToEnemyDistance = 10.0;
const int libOLMS_gv_aIHeroMMOneLaneMaxGenerators = 10;

// Variable Declarations
unitgroup libOLMS_gv_mMOneLaneRegenGlobeGens;
unit[libOLMS_gv_aIHeroMMOneLaneMaxGenerators + 1] libOLMS_gv_aIHeroMMOneLaneGeneratorUnits;
int libOLMS_gv_aIHeroMMOneLaneNumGenerators;

// Function Declarations
void libOLMS_gf_MMOneLaneDisplayRegenGlobeGeneratorTimer (unit lp_unit);
void libOLMS_gf_MMOneLaneRegenGlobeCoolupTime ();
void libOLMS_gf_MMOneLaneHeroAIChangeToState (int lp_trigPlayer, int lp_state, unit lp_target, int lp_priority);
int libOLMS_gf_MMOneLaneHeroAIGetRegen (int lp_trigPlayer);
void libOLMS_gf_MMOneLaneHeroAIInitRegenGlobeGenerators ();
void libOLMS_gf_MMOneLaneHeroAIGeneratorLogic (int lp_faction);
fixed libOLMS_gf_HeroAIDangerRatioEval (int lp_playerFaction, point lp_point, fixed lp_radius);
void libOLMS_gf_MMOneLaneHeroAIGeneratorPinged (int lp_pingingPlayer, unit lp_pingedUnit);

// Trigger Declarations
trigger libOLMS_gt_IncludeOneLaneMapShared;
trigger libOLMS_gt_MMOneLaneInit;
trigger libOLMS_gt_MMOneLaneGateTimerStarts;
trigger libOLMS_gt_MMOneLaneGatesOpen;
trigger libOLMS_gt_MMOneLanePingDataInit;
trigger libOLMS_gt_MMOneLaneRegenGlobeStartTimer;
trigger libOLMS_gt_MMOneLaneHeroAITeamMapLogic;
trigger libOLMS_gt_MMOneLaneHeroAIStateLogic;
trigger libOLMS_gt_MMOneLanePingCallbackPlayerPingsGenerator;

// Library Initialization
void libOLMS_InitVariables ();

